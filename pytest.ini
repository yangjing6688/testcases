[pytest]
filterwarnings =
    ignore::UserWarning
python_files = test_*
python_classes = *Tests
python_functions = test_*
addopts = -v -rxXPs --html=report.html --self-contained-html --alluredir=allure_output --tc-format=yaml --capture=tee-sys --log-cli-level=INFO
markers =
    p1:                     Priority One
    p2:                     Priority Two
    p3:                     Priority Three
    p4:                     Priority Four
    p5:                     Priority Five
    development:            Filter cases under development.  Always excluded on official execution. All tests must initially contain this marker.  The automation team will remove it and assign other markers as appropriate.
    testbed_1_node:         Supports a 1 node test bed
    testbed_2_node:         Supports a 2 node test bed
    testbed_3_node:         Supports a 3 node test bed
    testbed_4_node:         Supports a 4 node test bed
    testbed_5_node:         Supports a 5 node test bed
    testbed_adsp:           Supports a wireless ADSP testbed
    testbed_none:           Use this marker (or testbed_not_required) when no testbed is required
    testbed_not_required:   Use this marker (or testbed_none) when no testbed is required
    exos:                   EXOS Test supported
    voss:                   VOSS Test supported
    smoke:                  Sum of all smoke run in less than 30 minutes. High confidence of feature functionality. Golden Reg case
    nightly:                nightly runs
    build:                  build runs
    stack:                  stack runs
    skip_platform:          add arguments form unsupported groups skip_platform('plat', 'platgroup')
    required_platform:      add arguments to only execute on a platform or platform group
    required_nos:           add arguments for only supported network os. exos voss currently
    skip_nos:               add arguments for specifically unsupported network OS. exos voss currently
    required_capability:    add arguments for yaml config based supported features
    start_version:          add arguments, space delimited 'NOS ##.#'  NOS major release for first major release available
    end_version:            add arguments, space delimited 'NOS ##.#'  NOS major release for last supported major release


